language: go

# Only the last two Go releases are supported by the Go team with security
# updates. Any versions older than that should be considered deprecated.
# Don't bother testing with them. tip builds your code with the latest
# development version of Go. This can warn you that your code will break
# in the next version of Go. Don't worry! Later we declare that test runs
# are allowed to fail on Go tip.
go:
  - 1.9
  - master

# Skip the install step. Don't `go get` dependencies. Only build with the
# code in vendor/
install: false

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
    - go: master
  # Wait for tip tests to finish, do not send multiple notifications
  fast_finish: false

notifications:
  email: false
  slack:
    rooms:
      secure: E6sv9MWyWcsR/q1bhqK6hXZIxWlohEKf+uBg85KoTeIzidY5vnv2hEJfuNdstCyWTvsLb2eKqCxx8hiTjDC8xTuTu3hbpC9Dg/8CYvsCx/vOu30H7LJw9tIDz9XqI0uNqqd56mpb2t6zFeLeLOfC1pigyZ8KIsH+8rMLFGcZNDhVQobd3IbxIGIJA47gCCufKoXeS6XRRuQt50/b7nj4qatSkl5ggulM8K8bYiZ524C+FWfOyrpioPQR+SYXA30DKbC+rODNAok3TxSyVTSMQxF1JVqelOkRqFL0pvWb78xDkVYeBin+sdcKcQc+UN7LTV6mlU9ASoFjLDg0As0j2OxlOeWw3316t0BolkCFtk3SFUtYrM25D62XeR9TW75rmZAq0+jp2V7KDCndkKIrsIIzC/Ny06qZbp4mF+VdN3NZskxfD+KEbhq4rSK/i7zP8F/vX6gTSaecaNgVgJBy3xcedLCDPAUx8wASZHF0+VmV3mKn9QE2eSQYxa9tGAhKWHluVpKFzTKcKPrXpBIhYrfIYuLpct4sNfhiWLKZ8UqnHfNGvI832iVo2GfqMX8qzoAMSMxB/G7kKJqdmWwf7HXrdC8bsig8cgoEwnKkJNwcp9OEoKQ7sv9K0lSItEnDmAU2ISOyQtIcGAxPKfNu4zZkwN1QecYt4A1zIFymc00=

# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
  - go get github.com/golang/lint/golint                        # Linter
  - go get honnef.co/go/tools/cmd/megacheck                     # Badass static analyzer/linter
  - go get github.com/fzipp/gocyclo

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - test -z $(gofmt -s -l $GO_FILES)         # Fail if a .go file hasn't been formatted with gofmt
  - go test -v -race ./...                   # Run all the tests with the race detector enabled
  - go vet ./...                             # go vet is the official Go static analyzer
  - megacheck ./...                          # "go vet on steroids" + linter
  - gocyclo -over 19 $GO_FILES               # forbid code with huge functions
  - golint -set_exit_status $(go list ./...) # one last linter